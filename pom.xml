<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.telekom.m2m.cot</groupId>
    <artifactId>java-rest-client</artifactId>
    <version>0.4.2-SNAPSHOT</version>

    <name>Cloud of Things Java REST SDK</name>
    <description>This is an SDK to interfere with the Cloud of Things by
        Deutsche Telekom AG.
    </description>
    <url>https://github.com/marquies/cot-java-rest-sdk</url>

    <licenses>
        <license>
            <name>All rights reserved. Feel free to use in your CoT IoT
                projects.
            </name>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:marquies/cot-java-rest-sdk.git</connection>
        <developerConnection>scm:git:git@github.com:marquies/cot-java-rest-sdk.git</developerConnection>
        <tag>tarent_dev</tag>
        <url>git@github.com:marquies/cot-java-rest-sdk.git</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>internal-evolvis-release-repository</id>
            <name>internal release repository</name>
            <url>sftp://maven@dev-repo.tarent.de:/var/www/dev_repo/releases</url>
        </repository>
        <snapshotRepository>
            <id>internal-evolvis-snapshot-repository</id>
            <name>internal snapshot repository</name>
            <url>sftp://maven@dev-repo.tarent.de:/var/www/dev_repo/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <developers>
        <developer>
            <id>marquies</id>
            <name>Patrick Breucking</name>
            <email>Patrick.Breucking@t-systems.com</email>
            <url>http://www.patrickbreucking.de</url>
            <organization>Deutsche Telekom AG</organization>
            <organizationUrl>http://m2m.telekom.com</organizationUrl>
            <roles>
                <role>Technical Program Manager IoT</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <powermock.version>1.6.4</powermock.version>

        <!-- versions for logging dependencies -->
        <slf4j.version>1.7.21</slf4j.version>
        <log4j.version>2.7</log4j.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>OkHttp</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-testng</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- logging dependencies -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.13</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-ssh</artifactId>
                        <version>2.12</version>
                    </dependency>
                </dependencies>
            </plugin>
<!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
-->
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-jgitflow-plugin</artifactId>
                <version>1.0-alpha20</version>
                <configuration>
                    <!-- Enable this to push to origin using SSH keys -->
                    <enableSshAgent>true</enableSshAgent>
                    <!-- Keep your maven submodules at the same version as the parent POM -->
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!--
                      Pusing in-development features to origin allows all devs to see what each other
                      are working on
                    -->
                    <pushFeatures>true</pushFeatures>
                    <!--
                      This allows the CI server (e.g. Jenkins) to automatically push new releases to
                      origin; you can then either manually deploy them or, if you are doing Continuous
                      Deployments, auto-deploy them to prod
                    -->
                    <pushReleases>true</pushReleases>
                    <!--
                      Hot Fixes should be pushed to origin as well so that any dev can pick them up
                    -->
                    <pushHotfixes>true</pushHotfixes>
                    <!--
                      Prevents deployments from dev workstations so that they can be done by a CI
                      server
                    -->
                    <noDeploy>true</noDeploy>
                    <flowInitContext>
                        <!--
                          You can customize your development branch name. Why? Because it's faster to type
                          'git push origin dvlp'
                          than
                          'git push origin develop'
                          ;-)
                        -->
                        <developBranchName>develop</developBranchName>
                        <!-- You can also customize your tag prefixes -->
                        <versionTagPrefix>rev-</versionTagPrefix>
                    </flowInitContext>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>tarent-nexus-bonn</id>
            <url>https://repo-bn-01.lan.tarent.de/repository/all_repos/</url>
        </repository>
    </repositories>

</project>
